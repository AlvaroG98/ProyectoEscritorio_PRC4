
package vistas;

import controlador.docWriter;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
import modelo.conexion;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import vistas.PerfilDeUsuario;
/**
 *
 * @author lando
 */
public class Operador extends javax.swing.JFrame {
     private final static Logger log = LogManager.getLogger(Operador.class);
     private String ActualizarOperador = "CALL CambiarEstado(?,?)";
     private Connection cnn;
     private int Cod_Orden;
     private int ProcesoOrden;
     
     public String getActualizarOperador(){
     return ActualizarOperador;
     }
    /**
     * Creates new form Operador
     */
    public Operador() {
        initComponents();
    }
    private String Seleccionar = "Select o.Cod_Orden, Concat(Prim_nom,' ',Seg_nom,' ',Prim_ape,' ',Seg_ape) as 'Usuario',CreadaEl,ProcesoOrden,d.Direccion\n" +
"from Ordenes as o inner join Usuarios as u on o.Cod_Usuario=u.Cod_Usuario inner join direcciones as d on\n" +
"o.Cod_Direccion=d.Cod_direc\n" +
"where Status like 'Activa';";
    private docWriter dw = new docWriter();
    private Connection cnn2;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtbOperador = new javax.swing.JTable();
        jlbOperador = new javax.swing.JLabel();
        btnModificar = new javax.swing.JButton();
        cbOpciones = new javax.swing.JComboBox<>();
        btnCerrarSesion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jtbOperador.setFont(new java.awt.Font("Dubai", 1, 14)); // NOI18N
        jtbOperador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtbOperador);

        jlbOperador.setFont(new java.awt.Font("Ebrima", 1, 18)); // NOI18N
        jlbOperador.setText("OPERADOR DE ORDENES");

        btnModificar.setText("Modificar Estado");
        btnModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnModificarMouseClicked(evt);
            }
        });

        cbOpciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1.Cocinando", "2.Listo", "3.Enviado", "4.Entregado" }));
        cbOpciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbOpcionesMouseClicked(evt);
            }
        });

        btnCerrarSesion.setText("Cerrar Sesi√≥n");
        btnCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarSesionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 414, Short.MAX_VALUE)
                        .addComponent(jlbOperador)
                        .addGap(370, 370, 370))))
            .addGroup(layout.createSequentialGroup()
                .addGap(383, 383, 383)
                .addComponent(btnModificar)
                .addGap(49, 49, 49)
                .addComponent(cbOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCerrarSesion)
                .addGap(420, 420, 420))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jlbOperador)
                .addGap(87, 87, 87)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificar)
                    .addComponent(cbOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(btnCerrarSesion)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        CargarOrdenes();
    }//GEN-LAST:event_formWindowOpened

    private void btnModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarMouseClicked
        // TODO add your handling code here:
        int columna = 0;
        int fila= jtbOperador.getSelectedRow();
        int valor= Integer.parseInt(jtbOperador.getModel().getValueAt(fila, columna).toString());
        String Estado = cbOpciones.getSelectedItem().toString();
        int Proceso = Integer.parseInt(Estado.substring(0,1));
        Actualizar(valor,Proceso);
        CargarOrdenes();
       
    }//GEN-LAST:event_btnModificarMouseClicked

    private void cbOpcionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbOpcionesMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cbOpcionesMouseClicked

    private void btnCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarSesionActionPerformed
        // TODO add your handling code here:
        Identificate ventana = new Identificate();
        ventana.setVisible(true);
        dw.cerrarSesion("Empleado");
        dispose();
        dispose();
    }//GEN-LAST:event_btnCerrarSesionActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    
     public void CargarOrdenes() {
        try {
            Connection cnn;
            cnn = conexion.Conectar();
            int cont = 0;
            Statement smt = cnn.createStatement();
            ResultSet rs = smt.executeQuery(this.Seleccionar);
            DefaultTableModel modelo = new DefaultTableModel();
            modelo.addColumn("Cod_Orden");
            modelo.addColumn("Nombre");
            modelo.addColumn("Fecha");
            modelo.addColumn("ProcesoOrden");
            modelo.addColumn("Direccion");
            jtbOperador.setModel(modelo);
            while (rs.next()) {
                Object[] fila = new Object[5];
                for (int i = 0; i < 5; i++) {
                    if (i + 1 == 4) {
                        switch (Integer.parseInt(rs.getObject(i + 1).toString())) {
                            case 1: {
                                fila[i] = "Cocinando";
                                break;
                            }
                            case 2: {
                                fila[i] = "Listo";
                                break;
                            }
                            case 3: {
                                fila[i] = "Enviado";
                                break;
                            }
                            case 4: {
                                fila[i] = "Entregado";
                                break;
                            }
                            default:
                                fila[i] = rs.getObject(i + 1);
                                break;
                        }
                    } else {
                        fila[i] = rs.getObject(i + 1);
                    }
                }
                modelo.addRow(fila);
                cont++;
            }
        } catch (SQLException ex) {
            log.error("No se realizo la operacion de cargar ordenes " + ex.getMessage());
        }
    }
     
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Operador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Operador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Operador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Operador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Operador().setVisible(true);
            }
        });
    }
    
    public String Actualizar(int Cod_Orden, int ProcesoOrden){
    
    String resultado;
        try {
            cnn2 = conexion.Conectar();
            CallableStatement cmst = cnn2.prepareCall(getActualizarOperador());
            cmst.setInt(1,Cod_Orden);
            cmst.setInt(2, ProcesoOrden);
            cmst.execute();
            resultado = " Los datos se actualizaron exitosamente !!!";
            cnn2.close();
        } catch (SQLException sqlex) {
            resultado = " No se realizo la operacion " + sqlex.getMessage();
            log.error("No se realizo la operacion " + sqlex.getMessage());
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
            resultado = " No se realizo la operacion " + ex.getMessage();
            log.error("No se realizo la operacion " + ex.getMessage());
        }
        return resultado;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrarSesion;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox<String> cbOpciones;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlbOperador;
    private javax.swing.JTable jtbOperador;
    // End of variables declaration//GEN-END:variables
}
